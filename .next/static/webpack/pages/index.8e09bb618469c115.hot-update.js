"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/utilits.js":
/*!************************!*\
  !*** ./src/utilits.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Servicehashtag\": function() { return /* binding */ Servicehashtag; },\n/* harmony export */   \"aTagClick\": function() { return /* binding */ aTagClick; },\n/* harmony export */   \"activeSection\": function() { return /* binding */ activeSection; },\n/* harmony export */   \"activeSkillProgress\": function() { return /* binding */ activeSkillProgress; },\n/* harmony export */   \"customCursor\": function() { return /* binding */ customCursor; },\n/* harmony export */   \"dataImage\": function() { return /* binding */ dataImage; },\n/* harmony export */   \"hashtag_\": function() { return /* binding */ hashtag_; },\n/* harmony export */   \"imgToSVG\": function() { return /* binding */ imgToSVG; },\n/* harmony export */   \"preloader\": function() { return /* binding */ preloader; },\n/* harmony export */   \"scrollSection\": function() { return /* binding */ scrollSection; },\n/* harmony export */   \"scrollTop\": function() { return /* binding */ scrollTop; },\n/* harmony export */   \"stickyNav\": function() { return /* binding */ stickyNav; }\n/* harmony export */ });\n/* harmony import */ var _home_victoria_Work_orido_node_modules_next_dist_compiled_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray.js */ \"./node_modules/next/dist/compiled/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\nvar preloader_ = function preloader_() {\n  var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ? true : false;\n  var preloader = document.getElementById(\"preloader\");\n\n  if (preloader) {\n    if (!isMobile) {\n      setTimeout(function () {\n        preloader.classList.add(\"preloaded\");\n      }, 800);\n      setTimeout(function () {\n        preloader.remove();\n      }, 2000);\n    } else {\n      preloader.remove();\n    }\n  }\n};\n\nvar customCursor = function customCursor() {\n  var myCursor = document.querySelectorAll(\".mouse-cursor\"),\n      hamburger = document.querySelector(\".hamburger\"),\n      kura_tm_topbar = document.querySelector(\".kura_tm_topbar \"),\n      pointer = document.querySelector(\".cursor-pointer\"),\n      e = document.querySelector(\".cursor-inner\"),\n      t = document.querySelector(\".cursor-outer\");\n\n  function mouseEvent(element) {\n    react_dom__WEBPACK_IMPORTED_MODULE_1___default().findDOMNode(element).addEventListener(\"mouseenter\", function () {\n      e.classList.add(\"cursor-hover\"), t.classList.add(\"cursor-hover\");\n    });\n    react_dom__WEBPACK_IMPORTED_MODULE_1___default().findDOMNode(element).addEventListener(\"mouseleave\", function () {\n      e.classList.remove(\"cursor-hover\"), t.classList.remove(\"cursor-hover\");\n    });\n  }\n\n  if (myCursor.length) {\n    if (document.body) {\n      var n,\n          i = 0,\n          o = !1;\n      window.onmousemove = function (s) {\n        // console.log(document.querySelector(this));\n        o || (t.style.transform = \"translate(\" + s.clientX + \"px, \" + s.clientY + \"px)\"), e.style.transform = \"translate(\" + s.clientX + \"px, \" + s.clientY + \"px)\", n = s.clientY, i = s.clientX;\n      }, document.body.addEventListener(\"mouseenter\", // \"a,.kura_tm_topbar .trigger, .cursor-pointer\",\n      function () {\n        var a = document.querySelectorAll(\"a\");\n        e.classList.add(\"cursor-inner\"), t.classList.add(\"cursor-outer\");\n\n        for (var _i = 0; _i < a.length; _i++) {\n          var element = a[_i];\n          mouseEvent(element);\n        }\n\n        hamburger && mouseEvent(hamburger);\n        kura_tm_topbar && mouseEvent(kura_tm_topbar);\n        pointer && mouseEvent(pointer);\n      }), e.style.visibility = \"visible\", t.style.visibility = \"visible\";\n    }\n  }\n};\nvar preloader = function preloader() {\n  preloader_();\n  setTimeout(function () {\n    document.querySelector(\"body\").classList.add(\"opened\");\n  }, 3000);\n};\nvar aTagClick = function aTagClick() {\n  var aTag = document.querySelectorAll(\"[href='#']\");\n\n  for (var i = 0; i < aTag.length; i++) {\n    var a = aTag[i];\n    react_dom__WEBPACK_IMPORTED_MODULE_1___default().findDOMNode(a).addEventListener(\"click\", function (e) {\n      e.preventDefault();\n    });\n  }\n}; // Data image\n\nvar dataImage = function dataImage() {\n  var d = document.querySelectorAll(\"[data-img-url\");\n\n  for (var i = 0; i < d.length; i++) {\n    var element = d[i];\n    element.style.backgroundImage = \"url(\".concat(element.getAttribute(\"data-img-url\"), \")\");\n  }\n};\nvar imgToSVG = function imgToSVG() {\n  document.querySelectorAll(\"img.svg\").forEach(function (el) {\n    var imgID = el.getAttribute(\"id\");\n    var imgClass = el.getAttribute(\"class\");\n    var imgURL = el.getAttribute(\"src\");\n    fetch(imgURL).then(function (data) {\n      return data.text();\n    }).then(function (response) {\n      var parser = new DOMParser();\n      var xmlDoc = parser.parseFromString(response, \"text/html\");\n      var svg = xmlDoc.querySelector(\"svg\");\n\n      if (typeof imgID !== \"undefined\") {\n        svg.setAttribute(\"id\", imgID);\n      }\n\n      if (typeof imgClass !== \"undefined\") {\n        svg.setAttribute(\"class\", imgClass + \" replaced-svg\");\n      }\n\n      svg.removeAttribute(\"xmlns:a\");\n\n      if (el.parentNode) {\n        el.parentNode.replaceChild(svg, el);\n      }\n    });\n  });\n};\nvar activeSection = function activeSection(value) {\n  var sections = document.querySelectorAll(\".edrea_tm_section\");\n  sections.forEach(function (section) {\n    var id = section.getAttribute(\"id\");\n\n    if (id == value) {\n      section.className = \"edrea_tm_section active wow animated fadeInUp\";\n    } else {\n      section.className = \"edrea_tm_section hidden animated\";\n    }\n  });\n};\nvar activeSkillProgress = function activeSkillProgress() {\n  var progress_inner = document.querySelectorAll(\".skillsInner___\"),\n      triggerBottom = window.innerHeight / 5 * 5;\n  progress_inner.forEach(function (box) {\n    var boxTop = box.getBoundingClientRect().top,\n        boxElement = box.getElementsByClassName(\"bar\"),\n        label = box.getElementsByClassName(\"label\"),\n        number = box.getElementsByClassName(\"number\"),\n        boxItem = boxElement[0],\n        pWidth = box.getAttribute(\"data-value\"),\n        pColor = box.getAttribute(\"data-color\");\n    console.log(boxElement);\n\n    if (boxTop < triggerBottom) {\n      boxItem.classList.add(\"open\");\n      label[0].classList.add(\"opened\");\n      number[0].style.right = \"\".concat(100 - pWidth, \"%\");\n      boxItem.getElementsByClassName(\"bar_in\")[0].style.width = \"\".concat(pWidth, \"%\");\n      boxItem.getElementsByClassName(\"bar_in\")[0].style.backgroundColor = pColor;\n    } else {\n      boxItem.classList.remove(\"open\");\n      label[0].classList.remove(\"opened\");\n      number[0].style.right = \"\".concat(120, \"%\");\n    }\n  });\n};\nvar scrollSection = function scrollSection() {\n  var sections = document.querySelectorAll(\".orido_tm_section\");\n  var navLi = document.querySelectorAll(\".anchor_nav li\");\n  var current = \"\";\n  sections.forEach(function (section) {\n    var sectionTop = section.offsetTop;\n    var sectionHeight = section.clientHeight;\n\n    if (pageYOffset >= sectionTop - sectionHeight / 3) {\n      current = section.getAttribute(\"id\");\n    }\n  });\n  navLi.forEach(function (li) {\n    if (current !== null) {\n      li.classList.remove(\"current\");\n    }\n\n    if (li.getElementsByTagName(\"a\")[0].getAttribute(\"href\") == \"#\".concat(current)) {\n      li.classList.add(\"current\");\n    }\n  });\n  hashtag();\n};\nvar stickyNav = function stickyNav() {\n  var offset = window.scrollY;\n  var stickys = document.querySelectorAll(\".orido_tm_header\");\n  stickys.forEach(function (sticky) {\n    if (sticky) {\n      if (offset > 100) {\n        sticky.classList.add(\"animate\");\n      } else {\n        sticky.classList.remove(\"animate\");\n      }\n    }\n  });\n};\nvar scrollTop = function scrollTop() {\n  var bar = document.querySelector(\".progressbar\");\n  var line = document.querySelector(\".progressbar .line\");\n  var documentHeight = document.documentElement.scrollHeight;\n  var windowHeight = window.innerHeight;\n  var winScroll = window.scrollY;\n  var value = winScroll / (documentHeight - windowHeight) * 100;\n  var position = value;\n\n  if (winScroll > 100) {\n    bar.classList.add(\"animate\");\n    line.style.height = position + \"%\";\n  } else {\n    bar.classList.remove(\"animate\");\n  }\n}; // demo\n// export const filter_hashtag = () => {\n//   const ccc = document.querySelector(\n//     \".orido_tm_informations .right .filter .ccc\"\n//   );\n//   const current = document.querySelector(\n//     \".orido_tm_informations .right .filter .current\"\n//   );\n//   const a = document.querySelectorAll(\n//     \".orido_tm_informations .right .filter a\"\n//   );\n//   const filter = document.querySelector(\n//     \".orido_tm_informations .right .filter\"\n//   );\n//   a.forEach((e) => {\n//     e.addEventListener(\"mouseenter\", () => {\n//       currentLinkFilter(ccc, e);\n//     });\n//   });\n//   filter.addEventListener(\"mouseleave\", () => {\n//     currentLinkFilter(ccc, current);\n//   });\n//   currentLinkFilter(ccc, current);\n// };\n\nfunction currentLinkFilter(ccc, e) {\n  if (!e) {\n    return false;\n  }\n\n  var left = e.offsetLeft;\n  var width = e.offsetWidth + 80;\n  var menuleft = document.querySelector(\".orido_tm_informations .right .filter\").offsetLeft;\n  ccc.style.left = left - menuleft - 40 + \"px\";\n  ccc.style.width = width + \"px\"; // ccc.css({ left: left - menuleft - 40 + \"px\", width: width + \"px\" });\n}\n\nvar hashtag_ = function hashtag_() {\n  return hashtag();\n};\n\nvar hashtag = function hashtag() {\n  var ccc = document.querySelector(\".orido_tm_header .menu .ccc\");\n  var current = document.querySelector(\".orido_tm_header .menu .current a\");\n  currentLink(ccc, current);\n};\n\nfunction currentLink(ccc, e) {\n  if (!e) {\n    return false;\n  }\n\n  var left = e.offsetLeft;\n  var width = e.offsetWidth;\n  ccc.style.left = left + \"px\";\n  ccc.style.width = width + \"px\";\n}\n\nvar Servicehashtag = function Servicehashtag() {\n  var ccc = document.querySelector(\".orido_tm_service .ccc\");\n  var current = document.querySelector(\".orido_tm_service .current\");\n  var a = document.querySelectorAll(\".orido_tm_service .service_list ul li\");\n  var filter = document.querySelector(\".orido_tm_service .service_list\");\n  a.forEach(function (e) {\n    e.addEventListener(\"mouseenter\", function () {\n      currentLinkService(ccc, e);\n    });\n  });\n  filter.addEventListener(\"mouseleave\", function () {\n    currentLinkService(ccc, current);\n  });\n  currentLinkService(ccc, current);\n};\n_c = Servicehashtag;\n\nvar getSiblings = function getSiblings(node) {\n  return (0,_home_victoria_Work_orido_node_modules_next_dist_compiled_babel_runtime_helpers_esm_toConsumableArray_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(node.parentNode.children).filter(function (c) {\n    return c !== node;\n  });\n};\n\nfunction currentLinkService(ccc, e) {\n  if (!e) {\n    return false;\n  }\n\n  var siblings = getSiblings(e);\n  siblings.forEach(function (element) {\n    element.classList.remove(\"current\");\n  });\n  e.classList.add(\"current\");\n  var topOff = e.offsetTop;\n  var height = e.offsetHeight;\n  ccc.style.top = topOff + \"px\";\n  ccc.style.height = height + \"px\";\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Servicehashtag\");\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utilits.js\n"));

/***/ })

});